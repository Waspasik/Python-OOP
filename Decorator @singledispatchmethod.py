# –ö–ª–∞—Å—Å Processor
# –í–∞–º –¥–æ—Å—Ç—É–ø–µ–Ω –∫–ª–∞—Å—Å Processor. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

# –ö–ª–∞—Å—Å Processor –∏–º–µ–µ—Ç –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥:

# process() ‚Äî –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ
# –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ç–∏–ø–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ï—Å–ª–∏ —Ç–∏–ø –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–µ
# –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º, –≤–æ–∑–±—É–∂–¥–∞–µ—Ç—Å—è –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError —Å —Ç–µ–∫—Å—Ç–æ–º:

# –ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

# –ü–µ—Ä–µ–ø–∏—à–∏—Ç–µ –º–µ—Ç–æ–¥ process() –∫–ª–∞—Å—Å–∞ Processor —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞ @singledispatchmethod,
# —á—Ç–æ–±—ã –æ–Ω –≤—ã–ø–æ–ª–Ω—è–ª —Ç—É –∂–µ –∑–∞–¥–∞—á—É.

from functools import singledispatchmethod


class Processor:
    @singledispatchmethod
    @staticmethod
    def process(data):
        raise TypeError('–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
    
    @process.register(int)
    @process.register(float)
    @staticmethod
    def intfloat_process(data):
        return data * 2

    @process.register(str)
    @staticmethod
    def str_process(data):
        return data.upper()

    @process.register(list)
    @staticmethod
    def list_process(data):
        return sorted(data)
    
    @process.register(tuple)
    @staticmethod
    def tuple_process(data):
        return tuple(sorted(data))
    
    

# –ö–ª–∞—Å—Å Negator
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Negator. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

# –ö–ª–∞—Å—Å Negator –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥:

# neg() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –æ–±—ä–µ–∫—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π –µ–≥–æ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.

# –ï—Å–ª–∏ –º–µ—Ç–æ–¥—É –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è —Ü–µ–ª–æ–µ –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ, –æ–Ω –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ, –≤–∑—è—Ç–æ–µ —Å
# –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–º –∑–Ω–∞–∫–æ–º. –ï—Å–ª–∏ –º–µ—Ç–æ–¥—É –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ–Ω –¥–æ–ª–∂–µ–Ω
# –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –±—É–ª–µ–≤–æ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç
# –∫–∞–∫–æ–º—É-–ª–∏–±–æ –¥—Ä—É–≥–æ–º—É —Ç–∏–ø—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError —Å —Ç–µ–∫—Å—Ç–æ–º:

# –ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

from functools import singledispatchmethod


class Negator:
    @singledispatchmethod
    @staticmethod
    def neg(data):
        raise TypeError('–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
    
    @neg.register(int)
    @neg.register(float)
    @staticmethod
    def intfloat_neg(data):
        return data * -1
    
    @neg.register(bool)
    @staticmethod
    def bool_neg(data):
        return bool(data - 1)



# –ö–ª–∞—Å—Å Formatter
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å Formatter. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –Ω–∏–∫–∞–∫–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.

# –ö–ª–∞—Å—Å Formatter –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥:

# format() ‚Äî –º–µ—Ç–æ–¥, –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ int, float, tuple, list –∏–ª–∏ dict –∏
# –≤—ã–≤–æ–¥—è—â–∏–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ, –∑–∞–≤–∏—Å—è—â–µ–º –æ—Ç –µ–≥–æ —Ç–∏–ø–∞. –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
# –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–∞–∫–æ–º—É-–ª–∏–±–æ –¥—Ä—É–≥–æ–º—É —Ç–∏–ø—É, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError —Å —Ç–µ–∫—Å—Ç–æ–º:

# –ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –ø–æ–∫–∞–∑–∞–Ω—ã –≤ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –º–µ—Ç–æ–¥ format() –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–º–ª—è—Ç—å –∞–ø–æ—Å—Ç—Ä–æ—Ñ–∞–º–∏ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
# –∫–æ–ª–ª–µ–∫—Ü–∏–π.

from functools import singledispatchmethod


class Formatter:
    @singledispatchmethod
    @staticmethod
    def format(data):
        raise TypeError('–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
    
    @format.register(int)
    @format.register(float)
    @staticmethod
    def intfloat_format(data):
        print(f"–¶–µ–ª–æ–µ —á–∏—Å–ª–æ: {data}" if isinstance(data, int) else f"–í–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {data}")
    
    @format.register(list)
    @format.register(tuple)
    @staticmethod
    def listtuple_format(data):
        _type = '—Å–ø–∏—Å–∫–∞' if isinstance(data, list) else '–∫–æ—Ä—Ç–µ–∂–∞'
        print(f"–≠–ª–µ–º–µ–Ω—Ç—ã {_type}: {', '.join(map(str, data))}")
    
    @format.register(dict)
    @staticmethod
    def dict_format(data):
        print(f"–ü–∞—Ä—ã —Å–ª–æ–≤–∞—Ä—è: {', '.join(map(str, data.items()))}")



# –ö–ª–∞—Å—Å BirthInfo üå∂Ô∏è
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∫–ª–∞—Å—Å BirthInfo, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –¥–∞–Ω–Ω—ã–µ –æ –¥–∞—Ç–µ —Ä–æ–∂–¥–µ–Ω–∏—è. –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å
# –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç:

# birth_date ‚Äî –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –≤ –æ–¥–Ω–æ–º –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:

# —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ date
# —Å—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ ISO —Ñ–æ—Ä–º–∞—Ç–µ
# —Å–ø–∏—Å–æ–∫ –∏–ª–∏ –∫–æ—Ä—Ç–µ–∂ –∏–∑ —Ç—Ä–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª: –≥–æ–¥–∞, –º–µ—Å—è—Ü–∞ –∏ –¥–Ω—è

# –ï—Å–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —è–≤–ª—è–µ—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–∫–æ–º-–ª–∏–±–æ –¥—Ä—É–≥–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –¥–æ–ª–∂–Ω–æ
# –±—ã—Ç—å –≤–æ–∑–±—É–∂–¥–µ–Ω–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ TypeError —Å —Ç–µ–∫—Å—Ç–æ–º:

# –ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
# –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ BirthInfo –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–∏–Ω –∞—Ç—Ä–∏–±—É—Ç:

# birth_date ‚Äî –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –≤–∏–¥–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ date

# –ö–ª–∞—Å—Å BirthInfo –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –æ–¥–Ω–æ —Å–≤–æ–π—Å—Ç–≤–æ:

# age ‚Äî —Å–≤–æ–π—Å—Ç–≤–æ, –¥–æ—Å—Ç—É–ø–Ω–æ–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–µ–µ —Ç–µ–∫—É—â–∏–π –≤–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö, —Ç–æ –µ—Å—Ç—å
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç, –ø—Ä–æ—à–µ–¥—à–∏—Ö —Å –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å

# –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –í–æ–∑—Ä–∞—Å—Ç –≤ –≥–æ–¥–∞—Ö –¥–æ–ª–∂–µ–Ω –≤—ã—á–∏—Å–ª—è—Ç—å—Å—è —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –æ–±—ã—á–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —á–µ–ª–æ–≤–µ–∫–∞, —Ç–æ
# –µ—Å—Ç—å –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –æ–¥–∏–Ω –≥–æ–¥.

from functools import singledispatchmethod
from datetime import date, datetime
from dateutil.relativedelta import relativedelta


class BirthInfo:
    @singledispatchmethod
    def __init__(self, birth_date):
        raise TypeError('–ê—Ä–≥—É–º–µ–Ω—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è')
    
    @__init__.register(date)
    def _from_date(self, birth_date):
        self.birth_date = birth_date

    @__init__.register(str)
    def _from_str(self, birth_date):
        self.birth_date = datetime.strptime(birth_date, '%Y-%m-%d').date()
    
    @__init__.register(list)
    @__init__.register(tuple)
    def _from_list_tuple(self, birth_date):
        self.birth_date = datetime.strptime('-'.join(map(str, birth_date)), '%Y-%m-%d').date()

    @property
    def age(self):
        today = datetime.now()
        return relativedelta(today, self.birth_date).years
